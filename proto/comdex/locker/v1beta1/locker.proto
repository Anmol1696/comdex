syntax = "proto3";
package comdex.vault.v1beta1;

import "gogoproto/gogo.proto";

option go_package            = "github.com/comdex-official/comdex/x/vault/types";
option (gogoproto.equal_all) = false;
option (gogoproto.goproto_getters_all) = false;

//app_vault_type_id will be the key for  the KVStore for this value.
message Vault {
  string app_vault_type_id  = 1 ;
  uint64 extended_pair_id = 2 [ (gogoproto.moretags) = "yaml:\"extended_pair_vault_id\"" ];
  string owner   = 3 [ (gogoproto.moretags) = "yaml:\"owner\"" ];
  string amount_in = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.moretags)   = "yaml:\"amount_in\"",
    (gogoproto.nullable)   = false
  ];
  string amount_out = 5 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.moretags)   = "yaml:\"amount_out\"",
    (gogoproto.nullable)   = false
  ];
  google.protobuf.Timestamp created_at = 6 [
      (gogoproto.nullable) = false,
      (gogoproto.stdtime) = true,
      (gogoproto.moretags)   = "yaml:\"created_at\""
  ];
  string interest_accumulated  = 7 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.moretags)   = "yaml:\"interest_accrued\""
  ];
  string closing_fee_accumulated  = 9 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec",
    (gogoproto.moretags)   = "yaml:\"closing_fee_accumulated\""
  ];
}

//User address will be key for this KV store Vaule
message UserVaultIDMapping {


}



//pair to vault mapping